#include <LiquidCrystal_I2C.h>
#include <Wire.h>

LiquidCrystal_I2C lcd(0x27, 16, 2);

const int trigPin = 11;
const int echoPin = 12;
const int buzz_pin = 8;
const int buttonPin = 9;

unsigned long lastDebounceTime = 0;
unsigned long debounceDelay = 50;
bool lastButtonState = HIGH;
bool buttonState = HIGH;
bool measuring = false;

float distance_cm = 0;
unsigned long buzzTimer = 0;
bool buzzerOn = false;

void setup() {
  Serial.begin(9600);

  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(buzz_pin, OUTPUT);
  pinMode(buttonPin, INPUT_PULLUP);

  lcd.init();
  lcd.backlight();
  lcd.clear();
}

void loop() {
  // Handle button press with debounce
  bool reading = digitalRead(buttonPin);
  if (reading != lastButtonState) {
    lastDebounceTime = millis();
  }

  if ((millis() - lastDebounceTime) > debounceDelay) {
    if (reading != buttonState) {
      buttonState = reading;
      if (buttonState == LOW) {
        measuring = !measuring;  // Toggle measurement mode
        lcd.clear();
      }
    }
  }
  lastButtonState = reading;

  if (measuring) {
    // Trigger ultrasonic sensor
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);

    long duration = pulseIn(echoPin, HIGH);
    distance_cm = duration * 0.034 / 2.0;

    Serial.print("Distance: ");
    Serial.print(distance_cm);
    Serial.println(" cm");

    lcd.setCursor(0, 0);
    lcd.print("Distance:");
    lcd.setCursor(0, 1);
    lcd.print(distance_cm / 100.0, 2);
    lcd.print(" m");

    // Buzz if someone is too close
    if (distance_cm <= 100) {
      if (!buzzerOn && millis() - buzzTimer > 500) {
        analogWrite(buzz_pin, 150);
        buzzerOn = true;
        buzzTimer = millis();
      } else if (buzzerOn && millis() - buzzTimer > 500) {
        analogWrite(buzz_pin, 0);
        buzzerOn = false;
        buzzTimer = millis();
      }
    } else {
      analogWrite(buzz_pin, 0);
    }

    delay(100);
  } else {
    // Idle screen
    lcd.setCursor(0, 0);
    lcd.print("Press Button");
    lcd.setCursor(0, 1);
    lcd.print("to Start");
    analogWrite(buzz_pin, 0);
  }
}
